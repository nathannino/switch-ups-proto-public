[gd_scene load_steps=13 format=3 uid="uid://d2lcdsh40reie"]

[ext_resource type="Script" uid="uid://1yl6aj3ibwlh" path="res://globals/simple_scripts/button_change_scene_simple.gd" id="1_57t8v"]
[ext_resource type="Theme" uid="uid://bfeafrooqeg54" path="res://ScreenWide.tres" id="1_djnj0"]
[ext_resource type="Theme" uid="uid://606up66y2qp" path="res://ScreenWideHeader.tres" id="2_whq1p"]
[ext_resource type="Texture2D" uid="uid://cmj3niq4t2kmg" path="res://Kenney Assets/UI Pack/icon_repeat_dark.svg" id="3_whq1p"]

[sub_resource type="GDScript" id="GDScript_cc25f"]
script/source = "extends Control

@export var return_main_menu_button : Control

var can_pause = false

signal grab_back_focus

var _camera_static : bool = false
var camera_static : bool :
	get: return _camera_static
	set(value) :
		_camera_static = value
		camera_static_changed.emit()
signal camera_static_changed

func set_can_pause(_bool : bool) :
	can_pause = _bool

func set_in_battle(_bool : bool) :
	$CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button4.visible = _bool

func hide_reset() :
	propagate_call(\"release_focus\",[],true)
	grab_back_focus.emit()
	hide()

func _input(event: InputEvent) -> void:
	if not can_pause :
		return
	if event.is_action_pressed(\"options\") :
		if visible :
			hide_reset()
		else :
			show()


func _on_button_3_pressed() -> void:
	hide_reset()
	pass # Replace with function body.
"

[sub_resource type="GDScript" id="GDScript_2nhgm"]
script/source = "extends Button

@export var toplevel : Node

func _on_pressed() -> void:
	toplevel.hide_reset()
"

[sub_resource type="GDScript" id="GDScript_ltcgg"]
script/source = "extends OptionButton

const lang_array = [
	{\"shorthand\":\"fr\",\"longhand\":\"FranÃ§ais\"},
	{\"shorthand\":\"en\",\"longhand\":\"English\"}
]

func populate_options() :
	clear()
	var regex = RegEx.new()
	regex.compile(\".+?(?=_)\")
	var current_language = regex.search(TranslationServer.get_locale()).get_string()
	for i in range(lang_array.size()) :
		var lang = lang_array[i]
		add_item(lang[\"longhand\"],i)
		if (current_language == lang[\"shorthand\"]) :
			selected = i

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	populate_options()
	pass # Replace with function body.

func _on_item_selected(index: int) -> void:
	var id = get_selected_id()
	var lang = lang_array[id]
	TranslationServer.set_locale(lang.shorthand)
	pass # Replace with function body.
"

[sub_resource type="GDScript" id="GDScript_klnsa"]
script/source = "extends HSlider

@export var _label : Label
@export var _button : Button

func _on_drag_ended(value_changed: bool) -> void:
	if not value_changed :
		return
	get_window().content_scale_factor = value
	_label.text = str(value)
	_button.disabled = false
	pass # Replace with function body.
"

[sub_resource type="GDScript" id="GDScript_y8gkt"]
script/source = "extends Button

@export var slider : HSlider
@export var label : Label

func _notification(what: int) -> void:
	match what:
		NOTIFICATION_VISIBILITY_CHANGED :
			disabled = (get_window().content_scale_factor == 1.0)

func _on_pressed() -> void:
	disabled = true
	slider.value = 1.0
	get_window().content_scale_factor = 1.0
	label.text = str(1.0)
	pass # Replace with function body.
"

[sub_resource type="GDScript" id="GDScript_whq1p"]
script/source = "extends CheckBox

@export var toplevel : Control

func _on_toggled(toggled_on: bool) -> void:
	toplevel.camera_static = toggled_on
	
func _notification(what: int) -> void:
	match what:
		NOTIFICATION_VISIBILITY_CHANGED :
			button_pressed = toplevel.camera_static
"

[sub_resource type="GDScript" id="GDScript_5poeu"]
script/source = "extends Button

@export var root : Control

func _on_pressed() -> void:
	BattleLogPanel.show()
	root.hide_reset()
	pass # Replace with function body.
"

[sub_resource type="GDScript" id="GDScript_vf1g8"]
script/source = "extends Button

@export var key : String
@export var transition_key = \"wipe_rect\"
@export var block_change_scene : bool


func _ready() -> void:
	pressed.connect(change_scene)

func change_scene() :
	var target = SceneLoadWrapper.create().background_preload().from_key(key).prepare()
	var transition = SceneLoadWrapper.create().as_transition(\"wipe_rect\").prepare()
	OptionsOverlay.hide()
	BgmManager.stop_override(BgmManager.TRANSITIONS.FADE_OUT_IN)
	DeferredLoadingManager.change_scene(target,transition)
	if block_change_scene : DeferredLoadingManager.prevent_change_scene()
	ServerWrapper.close_server()
	ClientWrapperAutoload.disconnect_client()
"

[node name="Control" type="Control" node_paths=PackedStringArray("return_main_menu_button")]
visible = false
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_cc25f")
return_main_menu_button = NodePath("CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button2")

[node name="ColorRect" type="ColorRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0, 0, 0, 0.392157)

[node name="CenterContainer" type="CenterContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="PanelContainer" type="PanelContainer" parent="CenterContainer"]
layout_mode = 2
theme = ExtResource("1_djnj0")

[node name="VBoxContainer" type="VBoxContainer" parent="CenterContainer/PanelContainer"]
layout_mode = 2

[node name="PanelContainer" type="PanelContainer" parent="CenterContainer/PanelContainer/VBoxContainer"]
layout_mode = 2
theme = ExtResource("2_whq1p")

[node name="Label" type="Label" parent="CenterContainer/PanelContainer/VBoxContainer/PanelContainer"]
layout_mode = 2
text = "TR_OPTIONS"
horizontal_alignment = 1

[node name="MarginContainer" type="MarginContainer" parent="CenterContainer/PanelContainer/VBoxContainer"]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer"]
layout_mode = 2

[node name="Button" type="Button" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer" node_paths=PackedStringArray("toplevel")]
layout_mode = 2
text = "TR_OPTIONS_RESUME"
script = SubResource("GDScript_2nhgm")
toplevel = NodePath("../../../../../..")

[node name="OptionButton" type="OptionButton" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer"]
layout_mode = 2
script = SubResource("GDScript_ltcgg")

[node name="HBoxContainer" type="HBoxContainer" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
theme_override_colors/font_color = Color(0, 0, 0, 1)
text = "TR_OPTIONS_UISCALE"

[node name="UIScale" type="VBoxContainer" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
alignment = 1

[node name="HSlider" type="HSlider" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer/UIScale" node_paths=PackedStringArray("_label", "_button")]
custom_minimum_size = Vector2(100, 0)
layout_mode = 2
min_value = 0.5
max_value = 1.0
step = 0.1
value = 1.0
script = SubResource("GDScript_klnsa")
_label = NodePath("../../Label2")
_button = NodePath("../../Button")

[node name="Label2" type="Label" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
theme_override_colors/font_color = Color(0, 0, 0, 1)
text = "1.0"

[node name="Button" type="Button" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer" node_paths=PackedStringArray("slider", "label")]
custom_minimum_size = Vector2(50, 50)
layout_mode = 2
icon = ExtResource("3_whq1p")
icon_alignment = 1
expand_icon = true
script = SubResource("GDScript_y8gkt")
slider = NodePath("../UIScale/HSlider")
label = NodePath("../Label2")

[node name="HBoxContainer2" type="HBoxContainer" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_color = Color(0, 0, 0, 1)
text = "TR_OPTIONS_CAMSTATIC"

[node name="OPTIONS_CAMSTATIC" type="CheckBox" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2" node_paths=PackedStringArray("toplevel")]
layout_mode = 2
script = SubResource("GDScript_whq1p")
toplevel = NodePath("../../../../../../..")

[node name="Button4" type="Button" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer" node_paths=PackedStringArray("root")]
visible = false
layout_mode = 2
text = "TR_OPTIONS_LOGS"
script = SubResource("GDScript_5poeu")
root = NodePath("../../../../../..")

[node name="Button2" type="Button" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer"]
layout_mode = 2
text = "TR_OPTIONS_MAINMENU"
script = SubResource("GDScript_vf1g8")
key = "main_menu"

[node name="Button3" type="Button" parent="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer"]
layout_mode = 2
text = "TR_OPTIONS_QUIT"
script = ExtResource("1_57t8v")
key = "kill"
block_change_scene = true

[connection signal="visibility_changed" from="." to="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button2" method="_on_control_visibility_changed"]
[connection signal="pressed" from="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button" to="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button" method="_on_pressed"]
[connection signal="item_selected" from="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/OptionButton" to="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/OptionButton" method="_on_item_selected"]
[connection signal="drag_ended" from="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer/UIScale/HSlider" to="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer/UIScale/HSlider" method="_on_drag_ended"]
[connection signal="pressed" from="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer/Button" to="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer/Button" method="_on_pressed"]
[connection signal="toggled" from="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2/OPTIONS_CAMSTATIC" to="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2/OPTIONS_CAMSTATIC" method="_on_toggled"]
[connection signal="pressed" from="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button4" to="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button4" method="_on_pressed"]
[connection signal="pressed" from="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button2" to="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button2" method="_on_pressed"]
[connection signal="pressed" from="CenterContainer/PanelContainer/VBoxContainer/MarginContainer/VBoxContainer/Button3" to="." method="_on_button_3_pressed"]
